{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","robots.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchField","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflow","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","uuidv4","onSearchChange","event","target","value","fetch","then","res","json","users","filteredRobot","filter","name","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAceA,EAXE,SAAC,GAAe,EAAbC,OAEhB,MAAM,IAAIC,MAAM,WCULC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,8BACE,uBACEC,UAAU,mCACVC,KAAK,SACLC,YAAY,eACZC,SAAUJ,OCCHK,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,SAAzC,SACGH,EAAMI,YCkBEC,E,kDApBb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,0DAGFG,KAAKV,MAAMI,a,GAjBKQ,a,QCsDZC,GCpDPC,cAMAA,cAMAA,cAMAA,cAMAA,cAMAA,cAMAA,cAMAA,cAMAA,c,wDD1CN,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKL,SAAS,CAAElB,YAAauB,EAAMC,OAAOC,SAb1C,EAAKZ,MAAQ,CACXhB,OAAQ,GACRG,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClB0B,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKZ,SAAS,CAAErB,OAAQiC,S,oBAQ7C,WAAU,IAAD,OACDC,EAAgBd,KAAKJ,MAAMhB,OAAOmC,QAAO,SAACnC,GAC9C,OAAOA,EAAOoC,KACXC,cACAC,SAAS,EAAKtB,MAAMb,YAAYkC,kBAGrC,OAAKjB,KAAKJ,MAAMhB,OAAOuC,OAIrB,sBAAKlC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CACEF,YAAaiB,KAAKJ,MAAMb,YACxBC,aAAcgB,KAAKK,iBAErB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQkC,WAXjB,+C,GA5BKM,IAAMlB,YEGTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c21434a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  if (true) {\r\n    throw new Error('Nooooo');\r\n  }\r\n  return (\r\n    <>\r\n      {!!robots.length && robots.map(robot => (<Card key={robot.id} robot={robot}/>))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n  return (\r\n    <div>\r\n      <input \r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n        placeholder='Search robot' \r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflow: 'scroll', height: '500px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oooops. That is not good</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\nimport { robots } from \"../robots\";\n\nimport \"tachyons\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n    // setSearchField(event.target.value);\n  };\n\n  render() {\n    const filteredRobot = this.state.robots.filter((robots) => {\n      return robots.name\n        .toLowerCase()\n        .includes(this.state.searchField.toLowerCase());\n    });\n\n    if (!this.state.robots.length) {\n      return <p>Loading...</p>;\n    }\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f2\">RoboFriends</h1>\n        <SearchBox\n          searchField={this.state.searchField}\n          searchChange={this.onSearchChange}\n        />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobot} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const robots = [\r\n  {\r\n    id: uuidv4(),\r\n    name: 'Learn',\r\n    username: 'Bret',\r\n    email: 'learn.bret@gmail.com'\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: 'Mio Kai',\r\n    username: 'Xian',\r\n    email: 'learn.bret@gmail.com'\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: 'Oane',\r\n    username: 'No na',\r\n    email: 'learn.bret@gmail.com'\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: 'Min',\r\n    username: 'Kingdom',\r\n    email: 'learn.bret@gmail.com'\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: 'Qpo',\r\n    username: 'API',\r\n    email: 'learn.bret@gmail.com'\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: 'Elam',\r\n    username: 'Siom',\r\n    email: 'learn.bret@gmail.com'\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: 'Learn',\r\n    username: 'Bret',\r\n    email: 'learn.bret@gmail.com'\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: 'Must Fine',\r\n    username: 'Ween',\r\n    email: 'learn.bret@gmail.com'\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: 'Oh Reen',\r\n    username: 'Moin',\r\n    email: 'learn.bret@gmail.com'\r\n  }\r\n]","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}